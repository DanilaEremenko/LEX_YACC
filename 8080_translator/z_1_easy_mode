/*STACK = SP - 5
i1, i2
source_addr_1
source_addr_2
dest_addr_1
dest_addr_2
*/
/*@exchange_elements-----------------------------------------------*/
POP B;		/*B = i1,C = i2, 		SP -> source_addr_1*/

POP H;		/*HL = source address,	SP -> dest_addr_1*/
SUB A;		/*HL = &arr[i1]*/
ADD L;
ADD B;		
MOV L,A;	
MOV B,M; 	/*B = &arr[i1]*/

INX SP;		/*						SP -> source_addr_1*/
INX SP;

POP H;		/*HL = source address, 	SP -> dest_addr_1*/
SUB A;		/*HL = &arr[i2]*/
ADD L;
ADD C;		
MOV L,A;	
MOV C,M;	/*C = arr[i2]*/

POP H;		/*HL = destinition address*/
INX SP;		/*						SP -> i1*/
INX SP;
INX SP;
INX SP;
INX SP;
INX SP;
POP D;		/*D = i1, E = i2,		SP -> source_addr_1*/
POP H;		/*HL = source address,	SP -> dest_addr_1 */
POP H;		/*HL = destinition addr,SP -> pick SP      */

SUB A;		/*L = L + D; HL = &d_arr[i1]*/
ADD L;
ADD D;
MOV L,A;	
MOV M,C;	/*&d_arr[i1] = C*/

SUB A;		/*L = L + E; HL = &d_arr[i2]*/
ADD L;
ADD E;		
MOV L,A;	
MOV M,B;	/*&d_arr[i2] = B*/
INX SP;		/*						SP -> source_addr_1*/
INX SP;
INX SP;
INX SP;

RET;



/*STACK = SP - 4
source_addr
source_addr
dest_addr
dest_addr
*/
/*@transpose_matrix-----------------------------------------------*/
LXI B;/*4,1*/
004;
001;
PUSH B;
CALL;
000;
000;
LXI B;/*8,2*/
010;
002;
PUSH B;
CALL;
000;
000;
LXI B;/*12,3*/
014;
003;
PUSH B;
CALL;
000;
000;
LXI B;/*9,6*/
011;
006;
PUSH B;
CALL;
000;
000;
LXI B;/*13,7*/
015;
007;
PUSH B;
CALL;
000;
000;
LXI B;/*14,11*/
016;
013;
PUSH B;
CALL;
000;
000;

RET;

/*STACK
*/
/*@MAIN-----------------------------------------------*/
LXI SP;		/*initialize SP*/
200;
000;
LXI B;		/*push destinition address*/
221;
000;
PUSH B;
LXI B;		/*push source address*/
201;
000;
PUSH B;
CALL;		/*transpose matrix*/
050;
000;
HLT;


/*MATRIX SOURCE*/
201:1;
202:1;
203:1;
204:1;
205:2;
206:2;
207:2;
210:2;
211:3;
212:3;
213:3;
214:3;
215:4;
216:4;
217:4;
220:4;

/*MATRIX DESTINITION
221:1;
222:2;
223:3;
224:4;
225:1;
226:2;
227:3;
230:4;
231:1;
232:2;
233:3;
234:4;
235:1;
236:2;
237:3;
230:4;
*/