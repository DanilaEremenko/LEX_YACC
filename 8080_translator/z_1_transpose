/*@MAIN-----------------------------------------------*/
LXI SP;		/*initialize SP*/
200;
000;
LXI H;		/*v1 = HL - line element*/
202;	
000;
LXI D;		/*v2 = DE - row element*/
205;
000;
CALL;		/*@transpose_matrix*/
@transpose_matrix;
@transpose_matrix;
MVI A;		/*init matrix size*/
020;
PUSH PSW;	/*save matrix size*/
LXI B;		/*index of matrix*/
201;
000;
HLT;


/*@transpose_matrix-----------------------------------------------*/
/*@init_counter*/
MVI A;		
003;			/*ctr_val*/
PUSH PSW;		/*save line_index_shift*/
PUSH PSW;		/*save global_ctr*/

/*@exchange_elements*/
PUSH PSW;	/*save local_ctr = global_ctr*/
MOV A,M;	/*A = v1*/
PUSH PSW;	/*save v1*/
LDAX D;		/*A = v2*/
MOV M,A;	/*&v1 = v2*/
POP PSW;	/*A = v1*/
STAX D;		/*&v2 = v1*/

/*@check_counter*/
POP PSW;	/*get local_ctr*/
SUB;		/*ctr--*/
001;
JZ;			/*IF local_ctr == 0*/
@update_next_indexes;
@update_next_indexes;

/*@update_indexes*/
LXI B;			/*ELSE        -> line_index += 1*/
001;
000;
DAD B;			/*HL += 1*/
PUSH H;			/*save line index*/
PUSH D;			/*row_index += 4*/
POP H;			/*HL = DE*/
LXI B;			
004;		
000;
DAD B;			/*HL += 4*/
PUSH H;			
POP D;			/*DE = DE + 4*/
POP H;			/*HL = HL + 1*/
JMP;
@exchange_elements;
@exchange_elements;

/*@update_next_indexes*/
POP PSW;		/*POP global_ctr*/
SUB;
001;
JZ;				/*repeat if global_ctr != 0*/
@jump_to_return;
@jump_to_return;
POP B;			/*BC = line_index_shift*/
DAD B;			/*HL = HL + BC*/			
INX B;			/*line_index_shift++*/
PUSH PSW;		/*save global_ctr*/
PUSH B;			/*save line_index_shift*/
PUSH H;			/*save line index*/
LXI B;			
003;		
000;
DAD B;			/*HL += 3*/
PUSH H;			/*save row index*/
POP D;			/*DE = HL + 3 + 3*/
POP H;			/*HL = HL + 3*/
JMP;
@exchange_elements;
@exchange_elements;
RET;



/*MATRIX SOURCE
201:1;
202:1;
203:1;
204:1;
205:2;
206:2;
207:2;
210:2;
211:3;
212:3;
213:3;
214:3;
215:4;
216:4;
217:4;
220:4;
*/
